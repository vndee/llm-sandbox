[project]
name = "llm-sandbox"
version = "0.3.13"
description = "LLM Sandbox is a lightweight and portable sandbox environment designed to run large language model (LLM) generated code in a safe and isolated mode."
authors = [{ name = "Duy Huynh", email = "vndee.huynh@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp[cli]>=1.10.0",
    "pydantic>=2.11.5",
]

[project.urls]
Homepage = "https://vndee.github.io/llm-sandbox/"
Repository = "https://github.com/vndee/llm-sandbox"
Documentation = "https://vndee.github.io/llm-sandbox/"

[project.optional-dependencies]
docker = ["docker>=7.1.0"]
k8s = ["kubernetes>=32.0.1"]
podman = ["docker>=7.1.0", "podman>=5.4.0.1"]
mcp-docker = ["docker>=7.1.0", "mcp>=1.10.0"]
mcp-podman = ["docker>=7.1.0", "mcp>=1.10.0", "podman>=5.4.0.1"]
mcp-k8s = ["kubernetes>=32.0.1", "mcp>=1.10.0"]

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.11",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "langchain>=0.3.25",
    "llama-index>=0.12.37",
    "podman>=5.4.0.1",
    "kubernetes>=32.0.1",
    "docker>=7.1.0",
    "langgraph>=0.4.7",
    "langchain-openai>=0.3.18",
    "langchain-core>=0.3.61",
    "nest-asyncio>=1.6.0",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.6",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["llm_sandbox"]

[tool.mypy]
files = ["llm_sandbox"]
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "FBT001",
    "FBT002",
    "A003",
    "ANN401",
    "COM812",
    "COM819",
    "C901",
    "D100",
    "D203",
    "D213",
    "D300",
    "E111",
    "E114",
    "E117",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191",
    "S108",
    "PLR0913",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["llm_sandbox"]

[tool.deptry]
ignore = ["DEP004"]
